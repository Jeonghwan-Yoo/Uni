
4_FND(5).elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  00000282  000002f6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000282  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000306  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000020  00000000  00000000  00000336  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   0000023c  00000000  00000000  00000356  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000012d  00000000  00000000  00000592  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000229  00000000  00000000  000006bf  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000034  00000000  00000000  000008e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000190  00000000  00000000  0000091c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000001c2  00000000  00000000  00000aac  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  00000c6e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	58 c0       	rjmp	.+176    	; 0xb6 <__bad_interrupt>
   6:	00 00       	nop
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e2 e8       	ldi	r30, 0x82	; 130
  a0:	f2 e0       	ldi	r31, 0x02	; 2
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 31       	cpi	r26, 0x10	; 16
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	02 d0       	rcall	.+4      	; 0xb8 <main>
  b4:	e4 c0       	rjmp	.+456    	; 0x27e <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <main>:
#define PHONE_NUMBER 14
unsigned char FND[4]={0xfe,0xfd,0xfb,0xf7};
unsigned char FND_DATA[12]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0xbf,0xff};
	
int main(void)
{
  b8:	cf 93       	push	r28
  ba:	df 93       	push	r29
  bc:	cd b7       	in	r28, 0x3d	; 61
  be:	de b7       	in	r29, 0x3e	; 62
  c0:	2e 97       	sbiw	r28, 0x0e	; 14
  c2:	0f b6       	in	r0, 0x3f	; 63
  c4:	f8 94       	cli
  c6:	de bf       	out	0x3e, r29	; 62
  c8:	0f be       	out	0x3f, r0	; 63
  ca:	cd bf       	out	0x3d, r28	; 61
	DDRA=0xff;
  cc:	8f ef       	ldi	r24, 0xFF	; 255
  ce:	8a bb       	out	0x1a, r24	; 26
	DDRB=0xff;
  d0:	87 bb       	out	0x17, r24	; 23
	unsigned int delay;
	unsigned char i;
	unsigned char Phone[PHONE_NUMBER]={FND_DATA[0],FND_DATA[1],FND_DATA[0],FND_DATA[10],FND_DATA[7],FND_DATA[3],FND_DATA[3],FND_DATA[0],FND_DATA[10],FND_DATA[5],
  d2:	90 91 00 01 	lds	r25, 0x0100
  d6:	99 83       	std	Y+1, r25	; 0x01
  d8:	80 91 01 01 	lds	r24, 0x0101
  dc:	8a 83       	std	Y+2, r24	; 0x02
  de:	9b 83       	std	Y+3, r25	; 0x03
  e0:	20 91 0a 01 	lds	r18, 0x010A
  e4:	2c 83       	std	Y+4, r18	; 0x04
  e6:	80 91 07 01 	lds	r24, 0x0107
  ea:	8d 83       	std	Y+5, r24	; 0x05
  ec:	80 91 03 01 	lds	r24, 0x0103
  f0:	8e 83       	std	Y+6, r24	; 0x06
  f2:	8f 83       	std	Y+7, r24	; 0x07
  f4:	98 87       	std	Y+8, r25	; 0x08
  f6:	29 87       	std	Y+9, r18	; 0x09
  f8:	90 91 05 01 	lds	r25, 0x0105
  fc:	9a 87       	std	Y+10, r25	; 0x0a
  fe:	90 91 06 01 	lds	r25, 0x0106
 102:	9b 87       	std	Y+11, r25	; 0x0b
 104:	8c 87       	std	Y+12, r24	; 0x0c
 106:	80 91 09 01 	lds	r24, 0x0109
 10a:	8d 87       	std	Y+13, r24	; 0x0d
 10c:	80 91 0b 01 	lds	r24, 0x010B
 110:	8e 87       	std	Y+14, r24	; 0x0e
										FND_DATA[6],FND_DATA[3],FND_DATA[9],FND_DATA[11]};
	
	while(1)
	{
		for(i=0;i<PHONE_NUMBER; i++)
 112:	51 2c       	mov	r5, r1
		{
			for(delay=0;delay<50;delay++)
			{
				PORTB=FND[3];
				PORTA=Phone[i%PHONE_NUMBER];
 114:	0f 2e       	mov	r0, r31
 116:	f3 e9       	ldi	r31, 0x93	; 147
 118:	4f 2e       	mov	r4, r31
 11a:	f0 2d       	mov	r31, r0
				_delay_ms(5);
				PORTB=FND[2];
				PORTA=Phone[(i+1)%PHONE_NUMBER];
 11c:	0f 2e       	mov	r0, r31
 11e:	fe e0       	ldi	r31, 0x0E	; 14
 120:	af 2e       	mov	r10, r31
 122:	b1 2c       	mov	r11, r1
 124:	f0 2d       	mov	r31, r0
	{
		for(i=0;i<PHONE_NUMBER; i++)
		{
			for(delay=0;delay<50;delay++)
			{
				PORTB=FND[3];
 126:	0f 2e       	mov	r0, r31
 128:	ff e0       	ldi	r31, 0x0F	; 15
 12a:	cf 2e       	mov	r12, r31
 12c:	f1 e0       	ldi	r31, 0x01	; 1
 12e:	df 2e       	mov	r13, r31
 130:	f0 2d       	mov	r31, r0
				PORTA=Phone[i%PHONE_NUMBER];
				_delay_ms(5);
				PORTB=FND[2];
 132:	0f 2e       	mov	r0, r31
 134:	fe e0       	ldi	r31, 0x0E	; 14
 136:	ef 2e       	mov	r14, r31
 138:	f1 e0       	ldi	r31, 0x01	; 1
 13a:	ff 2e       	mov	r15, r31
 13c:	f0 2d       	mov	r31, r0
				PORTA=Phone[(i+1)%PHONE_NUMBER];
				_delay_ms(5);
				PORTB=FND[1];
 13e:	0d e0       	ldi	r16, 0x0D	; 13
 140:	11 e0       	ldi	r17, 0x01	; 1
				PORTA=Phone[(i+2)%PHONE_NUMBER];
				_delay_ms(5);
				PORTB=FND[0];
 142:	2c e0       	ldi	r18, 0x0C	; 12
 144:	31 e0       	ldi	r19, 0x01	; 1
	unsigned char Phone[PHONE_NUMBER]={FND_DATA[0],FND_DATA[1],FND_DATA[0],FND_DATA[10],FND_DATA[7],FND_DATA[3],FND_DATA[3],FND_DATA[0],FND_DATA[10],FND_DATA[5],
										FND_DATA[6],FND_DATA[3],FND_DATA[9],FND_DATA[11]};
	
	while(1)
	{
		for(i=0;i<PHONE_NUMBER; i++)
 146:	31 2c       	mov	r3, r1
 148:	37 c0       	rjmp	.+110    	; 0x1b8 <main+0x100>
		{
			for(delay=0;delay<50;delay++)
			{
				PORTB=FND[3];
 14a:	f6 01       	movw	r30, r12
 14c:	90 80       	ld	r9, Z
 14e:	98 ba       	out	0x18, r9	; 24
				PORTA=Phone[i%PHONE_NUMBER];
 150:	fb 01       	movw	r30, r22
 152:	90 80       	ld	r9, Z
 154:	9b ba       	out	0x1b, r9	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 156:	ef ef       	ldi	r30, 0xFF	; 255
 158:	f7 e4       	ldi	r31, 0x47	; 71
 15a:	31 97       	sbiw	r30, 0x01	; 1
 15c:	f1 f7       	brne	.-4      	; 0x15a <main+0xa2>
 15e:	00 c0       	rjmp	.+0      	; 0x160 <main+0xa8>
 160:	00 00       	nop
				_delay_ms(5);
				PORTB=FND[2];
 162:	f7 01       	movw	r30, r14
 164:	90 80       	ld	r9, Z
 166:	98 ba       	out	0x18, r9	; 24
				PORTA=Phone[(i+1)%PHONE_NUMBER];
 168:	fa 01       	movw	r30, r20
 16a:	90 80       	ld	r9, Z
 16c:	9b ba       	out	0x1b, r9	; 27
 16e:	ef ef       	ldi	r30, 0xFF	; 255
 170:	f7 e4       	ldi	r31, 0x47	; 71
 172:	31 97       	sbiw	r30, 0x01	; 1
 174:	f1 f7       	brne	.-4      	; 0x172 <main+0xba>
 176:	00 c0       	rjmp	.+0      	; 0x178 <main+0xc0>
 178:	00 00       	nop
				_delay_ms(5);
				PORTB=FND[1];
 17a:	f8 01       	movw	r30, r16
 17c:	90 80       	ld	r9, Z
 17e:	98 ba       	out	0x18, r9	; 24
				PORTA=Phone[(i+2)%PHONE_NUMBER];
 180:	9c 90       	ld	r9, X
 182:	9b ba       	out	0x1b, r9	; 27
 184:	ef ef       	ldi	r30, 0xFF	; 255
 186:	f7 e4       	ldi	r31, 0x47	; 71
 188:	31 97       	sbiw	r30, 0x01	; 1
 18a:	f1 f7       	brne	.-4      	; 0x188 <main+0xd0>
 18c:	00 c0       	rjmp	.+0      	; 0x18e <main+0xd6>
 18e:	00 00       	nop
				_delay_ms(5);
				PORTB=FND[0];
 190:	f9 01       	movw	r30, r18
 192:	90 80       	ld	r9, Z
 194:	98 ba       	out	0x18, r9	; 24
				PORTA=Phone[(i+3)%PHONE_NUMBER];
 196:	f3 01       	movw	r30, r6
 198:	90 80       	ld	r9, Z
 19a:	9b ba       	out	0x1b, r9	; 27
 19c:	ef ef       	ldi	r30, 0xFF	; 255
 19e:	f7 e4       	ldi	r31, 0x47	; 71
 1a0:	31 97       	sbiw	r30, 0x01	; 1
 1a2:	f1 f7       	brne	.-4      	; 0x1a0 <main+0xe8>
 1a4:	00 c0       	rjmp	.+0      	; 0x1a6 <main+0xee>
 1a6:	00 00       	nop
 1a8:	01 97       	sbiw	r24, 0x01	; 1
	
	while(1)
	{
		for(i=0;i<PHONE_NUMBER; i++)
		{
			for(delay=0;delay<50;delay++)
 1aa:	00 97       	sbiw	r24, 0x00	; 0
 1ac:	71 f6       	brne	.-100    	; 0x14a <main+0x92>
	unsigned char Phone[PHONE_NUMBER]={FND_DATA[0],FND_DATA[1],FND_DATA[0],FND_DATA[10],FND_DATA[7],FND_DATA[3],FND_DATA[3],FND_DATA[0],FND_DATA[10],FND_DATA[5],
										FND_DATA[6],FND_DATA[3],FND_DATA[9],FND_DATA[11]};
	
	while(1)
	{
		for(i=0;i<PHONE_NUMBER; i++)
 1ae:	53 94       	inc	r5
 1b0:	fd e0       	ldi	r31, 0x0D	; 13
 1b2:	f5 15       	cp	r31, r5
 1b4:	08 f4       	brcc	.+2      	; 0x1b8 <main+0x100>
 1b6:	53 2c       	mov	r5, r3
		{
			for(delay=0;delay<50;delay++)
			{
				PORTB=FND[3];
				PORTA=Phone[i%PHONE_NUMBER];
 1b8:	85 2d       	mov	r24, r5
 1ba:	86 95       	lsr	r24
 1bc:	84 9d       	mul	r24, r4
 1be:	81 2d       	mov	r24, r1
 1c0:	11 24       	eor	r1, r1
 1c2:	86 95       	lsr	r24
 1c4:	86 95       	lsr	r24
 1c6:	88 0f       	add	r24, r24
 1c8:	98 2f       	mov	r25, r24
 1ca:	99 0f       	add	r25, r25
 1cc:	99 0f       	add	r25, r25
 1ce:	99 0f       	add	r25, r25
 1d0:	98 1b       	sub	r25, r24
 1d2:	45 2d       	mov	r20, r5
 1d4:	49 1b       	sub	r20, r25
				_delay_ms(5);
				PORTB=FND[2];
				PORTA=Phone[(i+1)%PHONE_NUMBER];
 1d6:	85 2c       	mov	r8, r5
 1d8:	91 2c       	mov	r9, r1
 1da:	c4 01       	movw	r24, r8
 1dc:	01 96       	adiw	r24, 0x01	; 1
 1de:	b5 01       	movw	r22, r10
 1e0:	27 d0       	rcall	.+78     	; 0x230 <__divmodhi4>
 1e2:	fc 01       	movw	r30, r24
				_delay_ms(5);
				PORTB=FND[1];
				PORTA=Phone[(i+2)%PHONE_NUMBER];
 1e4:	c4 01       	movw	r24, r8
 1e6:	02 96       	adiw	r24, 0x02	; 2
 1e8:	b5 01       	movw	r22, r10
 1ea:	22 d0       	rcall	.+68     	; 0x230 <__divmodhi4>
 1ec:	3c 01       	movw	r6, r24
				_delay_ms(5);
				PORTB=FND[0];
				PORTA=Phone[(i+3)%PHONE_NUMBER];
 1ee:	c4 01       	movw	r24, r8
 1f0:	03 96       	adiw	r24, 0x03	; 3
 1f2:	b5 01       	movw	r22, r10
 1f4:	1d d0       	rcall	.+58     	; 0x230 <__divmodhi4>
 1f6:	4c 01       	movw	r8, r24
 1f8:	82 e3       	ldi	r24, 0x32	; 50
 1fa:	90 e0       	ldi	r25, 0x00	; 0
		for(i=0;i<PHONE_NUMBER; i++)
		{
			for(delay=0;delay<50;delay++)
			{
				PORTB=FND[3];
				PORTA=Phone[i%PHONE_NUMBER];
 1fc:	61 e0       	ldi	r22, 0x01	; 1
 1fe:	70 e0       	ldi	r23, 0x00	; 0
 200:	6c 0f       	add	r22, r28
 202:	7d 1f       	adc	r23, r29
 204:	64 0f       	add	r22, r20
 206:	71 1d       	adc	r23, r1
				_delay_ms(5);
				PORTB=FND[2];
				PORTA=Phone[(i+1)%PHONE_NUMBER];
 208:	41 e0       	ldi	r20, 0x01	; 1
 20a:	50 e0       	ldi	r21, 0x00	; 0
 20c:	4c 0f       	add	r20, r28
 20e:	5d 1f       	adc	r21, r29
 210:	4e 0f       	add	r20, r30
 212:	5f 1f       	adc	r21, r31
				_delay_ms(5);
				PORTB=FND[1];
				PORTA=Phone[(i+2)%PHONE_NUMBER];
 214:	a1 e0       	ldi	r26, 0x01	; 1
 216:	b0 e0       	ldi	r27, 0x00	; 0
 218:	ac 0f       	add	r26, r28
 21a:	bd 1f       	adc	r27, r29
 21c:	a6 0d       	add	r26, r6
 21e:	b7 1d       	adc	r27, r7
				_delay_ms(5);
				PORTB=FND[0];
				PORTA=Phone[(i+3)%PHONE_NUMBER];
 220:	66 24       	eor	r6, r6
 222:	63 94       	inc	r6
 224:	71 2c       	mov	r7, r1
 226:	6c 0e       	add	r6, r28
 228:	7d 1e       	adc	r7, r29
 22a:	68 0c       	add	r6, r8
 22c:	79 1c       	adc	r7, r9
 22e:	8d cf       	rjmp	.-230    	; 0x14a <main+0x92>

00000230 <__divmodhi4>:
 230:	97 fb       	bst	r25, 7
 232:	07 2e       	mov	r0, r23
 234:	16 f4       	brtc	.+4      	; 0x23a <__divmodhi4+0xa>
 236:	00 94       	com	r0
 238:	06 d0       	rcall	.+12     	; 0x246 <__divmodhi4_neg1>
 23a:	77 fd       	sbrc	r23, 7
 23c:	08 d0       	rcall	.+16     	; 0x24e <__divmodhi4_neg2>
 23e:	0b d0       	rcall	.+22     	; 0x256 <__udivmodhi4>
 240:	07 fc       	sbrc	r0, 7
 242:	05 d0       	rcall	.+10     	; 0x24e <__divmodhi4_neg2>
 244:	3e f4       	brtc	.+14     	; 0x254 <__divmodhi4_exit>

00000246 <__divmodhi4_neg1>:
 246:	90 95       	com	r25
 248:	81 95       	neg	r24
 24a:	9f 4f       	sbci	r25, 0xFF	; 255
 24c:	08 95       	ret

0000024e <__divmodhi4_neg2>:
 24e:	70 95       	com	r23
 250:	61 95       	neg	r22
 252:	7f 4f       	sbci	r23, 0xFF	; 255

00000254 <__divmodhi4_exit>:
 254:	08 95       	ret

00000256 <__udivmodhi4>:
 256:	aa 1b       	sub	r26, r26
 258:	bb 1b       	sub	r27, r27
 25a:	51 e1       	ldi	r21, 0x11	; 17
 25c:	07 c0       	rjmp	.+14     	; 0x26c <__udivmodhi4_ep>

0000025e <__udivmodhi4_loop>:
 25e:	aa 1f       	adc	r26, r26
 260:	bb 1f       	adc	r27, r27
 262:	a6 17       	cp	r26, r22
 264:	b7 07       	cpc	r27, r23
 266:	10 f0       	brcs	.+4      	; 0x26c <__udivmodhi4_ep>
 268:	a6 1b       	sub	r26, r22
 26a:	b7 0b       	sbc	r27, r23

0000026c <__udivmodhi4_ep>:
 26c:	88 1f       	adc	r24, r24
 26e:	99 1f       	adc	r25, r25
 270:	5a 95       	dec	r21
 272:	a9 f7       	brne	.-22     	; 0x25e <__udivmodhi4_loop>
 274:	80 95       	com	r24
 276:	90 95       	com	r25
 278:	bc 01       	movw	r22, r24
 27a:	cd 01       	movw	r24, r26
 27c:	08 95       	ret

0000027e <_exit>:
 27e:	f8 94       	cli

00000280 <__stop_program>:
 280:	ff cf       	rjmp	.-2      	; 0x280 <__stop_program>
