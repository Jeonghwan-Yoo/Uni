
3_Switch(4).elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  000000f0  00000164  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000f0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000016c  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000020  00000000  00000000  0000019c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000000c2  00000000  00000000  000001bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000087  00000000  00000000  0000027e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000000eb  00000000  00000000  00000305  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000024  00000000  00000000  000003f0  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000141  00000000  00000000  00000414  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000034  00000000  00000000  00000555  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  00000589  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	58 c0       	rjmp	.+176    	; 0xb6 <__bad_interrupt>
   6:	00 00       	nop
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 ef       	ldi	r30, 0xF0	; 240
  a0:	f0 e0       	ldi	r31, 0x00	; 0
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a8 30       	cpi	r26, 0x08	; 8
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	02 d0       	rcall	.+4      	; 0xb8 <main>
  b4:	1b c0       	rjmp	.+54     	; 0xec <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <main>:
unsigned char pattern[8]={0xFE,0xFD,0xFB,0xF7,0xEF,0xDF,0xBF,0x7F};

int main(void)
{
	int i=0;
	DDRA=0xff;
  b8:	8f ef       	ldi	r24, 0xFF	; 255
  ba:	8a bb       	out	0x1a, r24	; 26
	DDRC=0x00;
  bc:	14 ba       	out	0x14, r1	; 20
	PORTA=pattern[i];
  be:	80 91 00 01 	lds	r24, 0x0100
  c2:	8b bb       	out	0x1b, r24	; 27
	PORTC=0xf0;
  c4:	80 ef       	ldi	r24, 0xF0	; 240
  c6:	85 bb       	out	0x15, r24	; 21
#include <avr/io.h>
unsigned char pattern[8]={0xFE,0xFD,0xFB,0xF7,0xEF,0xDF,0xBF,0x7F};

int main(void)
{
	int i=0;
  c8:	80 e0       	ldi	r24, 0x00	; 0
  ca:	90 e0       	ldi	r25, 0x00	; 0
	PORTA=pattern[i];
	PORTC=0xf0;
	while(1)
	{
		while(!(~PINC&0x10));
		if(++i==8) i=0;
  cc:	40 e0       	ldi	r20, 0x00	; 0
  ce:	30 e0       	ldi	r19, 0x00	; 0
	DDRC=0x00;
	PORTA=pattern[i];
	PORTC=0xf0;
	while(1)
	{
		while(!(~PINC&0x10));
  d0:	9c 99       	sbic	0x13, 4	; 19
  d2:	fe cf       	rjmp	.-4      	; 0xd0 <main+0x18>
		if(++i==8) i=0;
  d4:	01 96       	adiw	r24, 0x01	; 1
  d6:	88 30       	cpi	r24, 0x08	; 8
  d8:	91 05       	cpc	r25, r1
  da:	11 f4       	brne	.+4      	; 0xe0 <main+0x28>
  dc:	84 2f       	mov	r24, r20
  de:	93 2f       	mov	r25, r19
		PORTA=pattern[i];
  e0:	fc 01       	movw	r30, r24
  e2:	e0 50       	subi	r30, 0x00	; 0
  e4:	ff 4f       	sbci	r31, 0xFF	; 255
  e6:	20 81       	ld	r18, Z
  e8:	2b bb       	out	0x1b, r18	; 27
	}
  ea:	f2 cf       	rjmp	.-28     	; 0xd0 <main+0x18>

000000ec <_exit>:
  ec:	f8 94       	cli

000000ee <__stop_program>:
  ee:	ff cf       	rjmp	.-2      	; 0xee <__stop_program>
