
9_Interrupt(3).elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000010a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  0000015e  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000028  00000000  00000000  0000018e  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   0000012b  00000000  00000000  000001b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000e7  00000000  00000000  000002e1  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000199  00000000  00000000  000003c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000040  00000000  00000000  00000564  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    0000018f  00000000  00000000  000005a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000073  00000000  00000000  00000733  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000030  00000000  00000000  000007a6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	44 c0       	rjmp	.+136    	; 0x9e <__vector_5>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	0d d0       	rcall	.+26     	; 0xb4 <main>
  9a:	35 c0       	rjmp	.+106    	; 0x106 <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <__vector_5>:
#define F_CPU 14745600L
#include <avr/io.h>
#include <avr/interrupt.h>
#include <util/delay.h>

ISR(INT4_vect){
  9e:	1f 92       	push	r1
  a0:	0f 92       	push	r0
  a2:	0f b6       	in	r0, 0x3f	; 63
  a4:	0f 92       	push	r0
  a6:	11 24       	eor	r1, r1
	EICRB=0b00000000;
  a8:	1a be       	out	0x3a, r1	; 58
}
  aa:	0f 90       	pop	r0
  ac:	0f be       	out	0x3f, r0	; 63
  ae:	0f 90       	pop	r0
  b0:	1f 90       	pop	r1
  b2:	18 95       	reti

000000b4 <main>:

int main(void)
{
	unsigned char led=0xfe;
	DDRA=0xff;
  b4:	8f ef       	ldi	r24, 0xFF	; 255
  b6:	8a bb       	out	0x1a, r24	; 26
	DDRE=0x00;
  b8:	12 b8       	out	0x02, r1	; 2
	PORTE=0xf0;
  ba:	80 ef       	ldi	r24, 0xF0	; 240
  bc:	83 b9       	out	0x03, r24	; 3
	EIMSK=0b00010000;
  be:	80 e1       	ldi	r24, 0x10	; 16
  c0:	89 bf       	out	0x39, r24	; 57
	EICRB=0b10101010;
  c2:	8a ea       	ldi	r24, 0xAA	; 170
  c4:	8a bf       	out	0x3a, r24	; 58
	SREG=0x80;
  c6:	80 e8       	ldi	r24, 0x80	; 128
  c8:	8f bf       	out	0x3f, r24	; 63
	
    while(1)
    {
        PORTA=led;
  ca:	8e ef       	ldi	r24, 0xFE	; 254
  cc:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ce:	2f ef       	ldi	r18, 0xFF	; 255
  d0:	3f e7       	ldi	r19, 0x7F	; 127
  d2:	44 e0       	ldi	r20, 0x04	; 4
  d4:	21 50       	subi	r18, 0x01	; 1
  d6:	30 40       	sbci	r19, 0x00	; 0
  d8:	40 40       	sbci	r20, 0x00	; 0
  da:	e1 f7       	brne	.-8      	; 0xd4 <main+0x20>
  dc:	00 c0       	rjmp	.+0      	; 0xde <main+0x2a>
  de:	00 00       	nop
		_delay_ms(100);
		led=(led<<1)|0b000001;
  e0:	8d ef       	ldi	r24, 0xFD	; 253
		if(led==0xff){
			led=0xfe; 
  e2:	9e ef       	ldi	r25, 0xFE	; 254
  e4:	01 c0       	rjmp	.+2      	; 0xe8 <main+0x34>
  e6:	89 2f       	mov	r24, r25
	EICRB=0b10101010;
	SREG=0x80;
	
    while(1)
    {
        PORTA=led;
  e8:	8b bb       	out	0x1b, r24	; 27
  ea:	2f ef       	ldi	r18, 0xFF	; 255
  ec:	3f e7       	ldi	r19, 0x7F	; 127
  ee:	44 e0       	ldi	r20, 0x04	; 4
  f0:	21 50       	subi	r18, 0x01	; 1
  f2:	30 40       	sbci	r19, 0x00	; 0
  f4:	40 40       	sbci	r20, 0x00	; 0
  f6:	e1 f7       	brne	.-8      	; 0xf0 <main+0x3c>
  f8:	00 c0       	rjmp	.+0      	; 0xfa <main+0x46>
  fa:	00 00       	nop
		_delay_ms(100);
		led=(led<<1)|0b000001;
  fc:	88 0f       	add	r24, r24
  fe:	81 60       	ori	r24, 0x01	; 1
		if(led==0xff){
 100:	8f 3f       	cpi	r24, 0xFF	; 255
 102:	91 f7       	brne	.-28     	; 0xe8 <main+0x34>
 104:	f0 cf       	rjmp	.-32     	; 0xe6 <main+0x32>

00000106 <_exit>:
 106:	f8 94       	cli

00000108 <__stop_program>:
 108:	ff cf       	rjmp	.-2      	; 0x108 <__stop_program>
