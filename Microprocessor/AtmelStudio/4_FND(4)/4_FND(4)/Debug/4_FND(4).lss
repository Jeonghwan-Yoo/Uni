
4_FND(4).elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  0000019a  0000020e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000019a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000021e  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000020  00000000  00000000  0000024e  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000001e1  00000000  00000000  0000026e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000010d  00000000  00000000  0000044f  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000001b9  00000000  00000000  0000055c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000024  00000000  00000000  00000718  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000188  00000000  00000000  0000073c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000019f  00000000  00000000  000008c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  00000a63  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	58 c0       	rjmp	.+176    	; 0xb6 <__bad_interrupt>
   6:	00 00       	nop
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ea e9       	ldi	r30, 0x9A	; 154
  a0:	f1 e0       	ldi	r31, 0x01	; 1
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 31       	cpi	r26, 0x10	; 16
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	02 d0       	rcall	.+4      	; 0xb8 <main>
  b4:	70 c0       	rjmp	.+224    	; 0x196 <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <main>:

unsigned char SEG[16]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90};

int main(void)
{
	DDRA=0xff;
  b8:	8f ef       	ldi	r24, 0xFF	; 255
  ba:	8a bb       	out	0x1a, r24	; 26
	DDRB=0xff;
  bc:	87 bb       	out	0x17, r24	; 23
	PORTB=0xfc;
  be:	8c ef       	ldi	r24, 0xFC	; 252
  c0:	88 bb       	out	0x18, r24	; 24
	int i,num,tenNum,count=0;
  c2:	e0 e0       	ldi	r30, 0x00	; 0
  c4:	f0 e0       	ldi	r31, 0x00	; 0
		{
			if(count<10)
			{
			
					PORTB=0xfe;
					num=count%10;
  c6:	0a e0       	ldi	r16, 0x0A	; 10
  c8:	10 e0       	ldi	r17, 0x00	; 0
				
			}
			else
			{
				
					PORTB=0xfe;
  ca:	4e ef       	ldi	r20, 0xFE	; 254
					num=count%10;
					PORTA=SEG[num];
					_delay_ms(10);
					PORTB=0xfd;
  cc:	0f 2e       	mov	r0, r31
  ce:	fd ef       	ldi	r31, 0xFD	; 253
  d0:	ff 2e       	mov	r15, r31
  d2:	f0 2d       	mov	r31, r0
					_delay_ms(10);
				
			}
		}
		count++;
		if(count>=100) count=0;
  d4:	d1 2c       	mov	r13, r1
  d6:	e1 2c       	mov	r14, r1
  d8:	02 c0       	rjmp	.+4      	; 0xde <main+0x26>
  da:	ed 2d       	mov	r30, r13
  dc:	fe 2d       	mov	r31, r14
					PORTB=0xfe;
					num=count%10;
					PORTA=SEG[num];
					_delay_ms(10);
					PORTB=0xfd;
					tenNum=count/10;
  de:	cf 01       	movw	r24, r30
  e0:	b8 01       	movw	r22, r16
  e2:	32 d0       	rcall	.+100    	; 0x148 <__divmodhi4>
  e4:	22 e3       	ldi	r18, 0x32	; 50
  e6:	30 e0       	ldi	r19, 0x00	; 0
			else
			{
				
					PORTB=0xfe;
					num=count%10;
					PORTA=SEG[num];
  e8:	dc 01       	movw	r26, r24
  ea:	a0 50       	subi	r26, 0x00	; 0
  ec:	bf 4f       	sbci	r27, 0xFF	; 255
					_delay_ms(10);
					PORTB=0xfd;
					tenNum=count/10;
					PORTA=SEG[tenNum];
  ee:	eb 01       	movw	r28, r22
  f0:	c0 50       	subi	r28, 0x00	; 0
  f2:	df 4f       	sbci	r29, 0xFF	; 255
	
	while(1)
	{
		for(i=0;i<50;i++)
		{
			if(count<10)
  f4:	ea 30       	cpi	r30, 0x0A	; 10
  f6:	f1 05       	cpc	r31, r1
  f8:	5c f4       	brge	.+22     	; 0x110 <main+0x58>
			{
			
					PORTB=0xfe;
  fa:	48 bb       	out	0x18, r20	; 24
					num=count%10;
					PORTA=SEG[num];
  fc:	8c 91       	ld	r24, X
  fe:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 100:	56 e6       	ldi	r21, 0x66	; 102
 102:	86 ee       	ldi	r24, 0xE6	; 230
 104:	90 e0       	ldi	r25, 0x00	; 0
 106:	51 50       	subi	r21, 0x01	; 1
 108:	80 40       	sbci	r24, 0x00	; 0
 10a:	90 40       	sbci	r25, 0x00	; 0
 10c:	e1 f7       	brne	.-8      	; 0x106 <main+0x4e>
 10e:	12 c0       	rjmp	.+36     	; 0x134 <main+0x7c>
				
			}
			else
			{
				
					PORTB=0xfe;
 110:	48 bb       	out	0x18, r20	; 24
					num=count%10;
					PORTA=SEG[num];
 112:	8c 91       	ld	r24, X
 114:	8b bb       	out	0x1b, r24	; 27
 116:	8f ef       	ldi	r24, 0xFF	; 255
 118:	9f e8       	ldi	r25, 0x8F	; 143
 11a:	01 97       	sbiw	r24, 0x01	; 1
 11c:	f1 f7       	brne	.-4      	; 0x11a <main+0x62>
 11e:	00 c0       	rjmp	.+0      	; 0x120 <main+0x68>
 120:	00 00       	nop
					_delay_ms(10);
					PORTB=0xfd;
 122:	f8 ba       	out	0x18, r15	; 24
					tenNum=count/10;
					PORTA=SEG[tenNum];
 124:	88 81       	ld	r24, Y
 126:	8b bb       	out	0x1b, r24	; 27
 128:	8f ef       	ldi	r24, 0xFF	; 255
 12a:	9f e8       	ldi	r25, 0x8F	; 143
 12c:	01 97       	sbiw	r24, 0x01	; 1
 12e:	f1 f7       	brne	.-4      	; 0x12c <main+0x74>
 130:	00 c0       	rjmp	.+0      	; 0x132 <main+0x7a>
 132:	00 00       	nop
 134:	21 50       	subi	r18, 0x01	; 1
 136:	31 09       	sbc	r19, r1
	PORTB=0xfc;
	int i,num,tenNum,count=0;
	
	while(1)
	{
		for(i=0;i<50;i++)
 138:	21 15       	cp	r18, r1
 13a:	31 05       	cpc	r19, r1
 13c:	d9 f6       	brne	.-74     	; 0xf4 <main+0x3c>
					PORTA=SEG[tenNum];
					_delay_ms(10);
				
			}
		}
		count++;
 13e:	31 96       	adiw	r30, 0x01	; 1
		if(count>=100) count=0;
 140:	e4 36       	cpi	r30, 0x64	; 100
 142:	f1 05       	cpc	r31, r1
 144:	54 f6       	brge	.-108    	; 0xda <main+0x22>
 146:	cb cf       	rjmp	.-106    	; 0xde <main+0x26>

00000148 <__divmodhi4>:
 148:	97 fb       	bst	r25, 7
 14a:	07 2e       	mov	r0, r23
 14c:	16 f4       	brtc	.+4      	; 0x152 <__divmodhi4+0xa>
 14e:	00 94       	com	r0
 150:	06 d0       	rcall	.+12     	; 0x15e <__divmodhi4_neg1>
 152:	77 fd       	sbrc	r23, 7
 154:	08 d0       	rcall	.+16     	; 0x166 <__divmodhi4_neg2>
 156:	0b d0       	rcall	.+22     	; 0x16e <__udivmodhi4>
 158:	07 fc       	sbrc	r0, 7
 15a:	05 d0       	rcall	.+10     	; 0x166 <__divmodhi4_neg2>
 15c:	3e f4       	brtc	.+14     	; 0x16c <__divmodhi4_exit>

0000015e <__divmodhi4_neg1>:
 15e:	90 95       	com	r25
 160:	81 95       	neg	r24
 162:	9f 4f       	sbci	r25, 0xFF	; 255
 164:	08 95       	ret

00000166 <__divmodhi4_neg2>:
 166:	70 95       	com	r23
 168:	61 95       	neg	r22
 16a:	7f 4f       	sbci	r23, 0xFF	; 255

0000016c <__divmodhi4_exit>:
 16c:	08 95       	ret

0000016e <__udivmodhi4>:
 16e:	aa 1b       	sub	r26, r26
 170:	bb 1b       	sub	r27, r27
 172:	51 e1       	ldi	r21, 0x11	; 17
 174:	07 c0       	rjmp	.+14     	; 0x184 <__udivmodhi4_ep>

00000176 <__udivmodhi4_loop>:
 176:	aa 1f       	adc	r26, r26
 178:	bb 1f       	adc	r27, r27
 17a:	a6 17       	cp	r26, r22
 17c:	b7 07       	cpc	r27, r23
 17e:	10 f0       	brcs	.+4      	; 0x184 <__udivmodhi4_ep>
 180:	a6 1b       	sub	r26, r22
 182:	b7 0b       	sbc	r27, r23

00000184 <__udivmodhi4_ep>:
 184:	88 1f       	adc	r24, r24
 186:	99 1f       	adc	r25, r25
 188:	5a 95       	dec	r21
 18a:	a9 f7       	brne	.-22     	; 0x176 <__udivmodhi4_loop>
 18c:	80 95       	com	r24
 18e:	90 95       	com	r25
 190:	bc 01       	movw	r22, r24
 192:	cd 01       	movw	r24, r26
 194:	08 95       	ret

00000196 <_exit>:
 196:	f8 94       	cli

00000198 <__stop_program>:
 198:	ff cf       	rjmp	.-2      	; 0x198 <__stop_program>
