
5_FND.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  00000216  0000028a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000216  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000296  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000020  00000000  00000000  000002c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   0000026c  00000000  00000000  000002e6  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000010b  00000000  00000000  00000552  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000022e  00000000  00000000  0000065d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000034  00000000  00000000  0000088c  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000181  00000000  00000000  000008c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000296  00000000  00000000  00000a41  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  00000cd7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	58 c0       	rjmp	.+176    	; 0xb6 <__bad_interrupt>
   6:	00 00       	nop
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e6 e1       	ldi	r30, 0x16	; 22
  a0:	f2 e0       	ldi	r31, 0x02	; 2
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ac 30       	cpi	r26, 0x0C	; 12
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	02 d0       	rcall	.+4      	; 0xb8 <main>
  b4:	ae c0       	rjmp	.+348    	; 0x212 <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <main>:
#define F_CPU 14745600L
#include <avr/io.h>
#include <util/delay.h>
	
int main(void)
{
  b8:	cf 93       	push	r28
  ba:	df 93       	push	r29
  bc:	cd b7       	in	r28, 0x3d	; 61
  be:	de b7       	in	r29, 0x3e	; 62
  c0:	2b 97       	sbiw	r28, 0x0b	; 11
  c2:	0f b6       	in	r0, 0x3f	; 63
  c4:	f8 94       	cli
  c6:	de bf       	out	0x3e, r29	; 62
  c8:	0f be       	out	0x3f, r0	; 63
  ca:	cd bf       	out	0x3d, r28	; 61
	unsigned char FND_DATA[11]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0xff};
  cc:	8b e0       	ldi	r24, 0x0B	; 11
  ce:	e0 e0       	ldi	r30, 0x00	; 0
  d0:	f1 e0       	ldi	r31, 0x01	; 1
  d2:	de 01       	movw	r26, r28
  d4:	11 96       	adiw	r26, 0x01	; 1
  d6:	01 90       	ld	r0, Z+
  d8:	0d 92       	st	X+, r0
  da:	8a 95       	dec	r24
  dc:	e1 f7       	brne	.-8      	; 0xd6 <main+0x1e>
	int count=0;
	int num=0;
	
	DDRA=0xff;
  de:	8f ef       	ldi	r24, 0xFF	; 255
  e0:	8a bb       	out	0x1a, r24	; 26
	DDRB=0xff;
  e2:	87 bb       	out	0x17, r24	; 23
	DDRC=0x00;
  e4:	14 ba       	out	0x14, r1	; 20
	DDRD=0xff;
  e6:	81 bb       	out	0x11, r24	; 17
	PORTC=0xf0;
  e8:	90 ef       	ldi	r25, 0xF0	; 240
  ea:	95 bb       	out	0x15, r25	; 21
	PORTB=0xff;
  ec:	88 bb       	out	0x18, r24	; 24
	PORTD=0xff;
  ee:	82 bb       	out	0x12, r24	; 18
#include <util/delay.h>
	
int main(void)
{
	unsigned char FND_DATA[11]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0xff};
	int count=0;
  f0:	20 e0       	ldi	r18, 0x00	; 0
  f2:	30 e0       	ldi	r19, 0x00	; 0
			do
			{
				while(~PINC&0x10);
				_delay_ms(3);
				PORTB=0xfe;
				num=count%10;
  f4:	0a e0       	ldi	r16, 0x0A	; 10
  f6:	10 e0       	ldi	r17, 0x00	; 0
		{
			do
			{
				while(~PINC&0x10);
				_delay_ms(3);
				PORTB=0xfe;
  f8:	4e ef       	ldi	r20, 0xFE	; 254
				num=count%10;
				PORTA=FND_DATA[num];
				_delay_ms(10);
				PORTB=0xfd;
  fa:	0f 2e       	mov	r0, r31
  fc:	fd ef       	ldi	r31, 0xFD	; 253
  fe:	ef 2e       	mov	r14, r31
 100:	f0 2d       	mov	r31, r0
				num=count/10;
				PORTA=FND_DATA[num];
				_delay_ms(10);
				PORTD=0xfc;
 102:	0f 2e       	mov	r0, r31
 104:	fc ef       	ldi	r31, 0xFC	; 252
 106:	ff 2e       	mov	r15, r31
 108:	f0 2d       	mov	r31, r0
			}while(!(~PINC&0x10));
			_delay_ms(3);
		}
		count++;
		if(count==100) count=0;
 10a:	c1 2c       	mov	r12, r1
 10c:	d1 2c       	mov	r13, r1
 10e:	02 c0       	rjmp	.+4      	; 0x114 <main+0x5c>
 110:	2c 2d       	mov	r18, r12
 112:	3d 2d       	mov	r19, r13
	PORTC=0xf0;
	PORTB=0xff;
	PORTD=0xff;
    while(1)
    {
		while(!(~PINC&0x10));
 114:	9c 99       	sbic	0x13, 4	; 19
 116:	fe cf       	rjmp	.-4      	; 0x114 <main+0x5c>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 118:	56 e6       	ldi	r21, 0x66	; 102
 11a:	86 ee       	ldi	r24, 0xE6	; 230
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	51 50       	subi	r21, 0x01	; 1
 120:	80 40       	sbci	r24, 0x00	; 0
 122:	90 40       	sbci	r25, 0x00	; 0
 124:	e1 f7       	brne	.-8      	; 0x11e <main+0x66>
		_delay_ms(20);
		if (count<10)
 126:	2a 30       	cpi	r18, 0x0A	; 10
 128:	31 05       	cpc	r19, r1
 12a:	bc f4       	brge	.+46     	; 0x15a <main+0xa2>
		{
			PORTB=0xfe;
 12c:	48 bb       	out	0x18, r20	; 24
			num=count%10;
 12e:	c9 01       	movw	r24, r18
 130:	b8 01       	movw	r22, r16
 132:	48 d0       	rcall	.+144    	; 0x1c4 <__divmodhi4>
			PORTA=FND_DATA[num];
 134:	e1 e0       	ldi	r30, 0x01	; 1
 136:	f0 e0       	ldi	r31, 0x00	; 0
 138:	ec 0f       	add	r30, r28
 13a:	fd 1f       	adc	r31, r29
 13c:	e8 0f       	add	r30, r24
 13e:	f9 1f       	adc	r31, r25
 140:	80 81       	ld	r24, Z
 142:	8b bb       	out	0x1b, r24	; 27
			PORTD=0xfe;
 144:	42 bb       	out	0x12, r20	; 18
			while(~PINC&0x10);
 146:	9c 9b       	sbis	0x13, 4	; 19
 148:	fe cf       	rjmp	.-4      	; 0x146 <main+0x8e>
 14a:	56 e6       	ldi	r21, 0x66	; 102
 14c:	86 ee       	ldi	r24, 0xE6	; 230
 14e:	90 e0       	ldi	r25, 0x00	; 0
 150:	51 50       	subi	r21, 0x01	; 1
 152:	80 40       	sbci	r24, 0x00	; 0
 154:	90 40       	sbci	r25, 0x00	; 0
 156:	e1 f7       	brne	.-8      	; 0x150 <main+0x98>
 158:	2e c0       	rjmp	.+92     	; 0x1b6 <main+0xfe>
				PORTB=0xfe;
				num=count%10;
				PORTA=FND_DATA[num];
				_delay_ms(10);
				PORTB=0xfd;
				num=count/10;
 15a:	c9 01       	movw	r24, r18
 15c:	b8 01       	movw	r22, r16
 15e:	32 d0       	rcall	.+100    	; 0x1c4 <__divmodhi4>
			{
				while(~PINC&0x10);
				_delay_ms(3);
				PORTB=0xfe;
				num=count%10;
				PORTA=FND_DATA[num];
 160:	a1 e0       	ldi	r26, 0x01	; 1
 162:	b0 e0       	ldi	r27, 0x00	; 0
 164:	ac 0f       	add	r26, r28
 166:	bd 1f       	adc	r27, r29
 168:	a8 0f       	add	r26, r24
 16a:	b9 1f       	adc	r27, r25
				_delay_ms(10);
				PORTB=0xfd;
				num=count/10;
				PORTA=FND_DATA[num];
 16c:	e1 e0       	ldi	r30, 0x01	; 1
 16e:	f0 e0       	ldi	r31, 0x00	; 0
 170:	ec 0f       	add	r30, r28
 172:	fd 1f       	adc	r31, r29
 174:	e6 0f       	add	r30, r22
 176:	f7 1f       	adc	r31, r23
		}
		else
		{
			do
			{
				while(~PINC&0x10);
 178:	9c 9b       	sbis	0x13, 4	; 19
 17a:	fe cf       	rjmp	.-4      	; 0x178 <main+0xc0>
 17c:	83 e3       	ldi	r24, 0x33	; 51
 17e:	9b e2       	ldi	r25, 0x2B	; 43
 180:	01 97       	sbiw	r24, 0x01	; 1
 182:	f1 f7       	brne	.-4      	; 0x180 <main+0xc8>
				_delay_ms(3);
				PORTB=0xfe;
 184:	48 bb       	out	0x18, r20	; 24
				num=count%10;
				PORTA=FND_DATA[num];
 186:	8c 91       	ld	r24, X
 188:	8b bb       	out	0x1b, r24	; 27
 18a:	8f ef       	ldi	r24, 0xFF	; 255
 18c:	9f e8       	ldi	r25, 0x8F	; 143
 18e:	01 97       	sbiw	r24, 0x01	; 1
 190:	f1 f7       	brne	.-4      	; 0x18e <main+0xd6>
 192:	00 c0       	rjmp	.+0      	; 0x194 <main+0xdc>
 194:	00 00       	nop
				_delay_ms(10);
				PORTB=0xfd;
 196:	e8 ba       	out	0x18, r14	; 24
				num=count/10;
				PORTA=FND_DATA[num];
 198:	80 81       	ld	r24, Z
 19a:	8b bb       	out	0x1b, r24	; 27
 19c:	8f ef       	ldi	r24, 0xFF	; 255
 19e:	9f e8       	ldi	r25, 0x8F	; 143
 1a0:	01 97       	sbiw	r24, 0x01	; 1
 1a2:	f1 f7       	brne	.-4      	; 0x1a0 <main+0xe8>
 1a4:	00 c0       	rjmp	.+0      	; 0x1a6 <main+0xee>
 1a6:	00 00       	nop
				_delay_ms(10);
				PORTD=0xfc;
 1a8:	f2 ba       	out	0x12, r15	; 18
			}while(!(~PINC&0x10));
 1aa:	9c 99       	sbic	0x13, 4	; 19
 1ac:	e5 cf       	rjmp	.-54     	; 0x178 <main+0xc0>
 1ae:	83 e3       	ldi	r24, 0x33	; 51
 1b0:	9b e2       	ldi	r25, 0x2B	; 43
 1b2:	01 97       	sbiw	r24, 0x01	; 1
 1b4:	f1 f7       	brne	.-4      	; 0x1b2 <main+0xfa>
			_delay_ms(3);
		}
		count++;
 1b6:	2f 5f       	subi	r18, 0xFF	; 255
 1b8:	3f 4f       	sbci	r19, 0xFF	; 255
		if(count==100) count=0;
 1ba:	24 36       	cpi	r18, 0x64	; 100
 1bc:	31 05       	cpc	r19, r1
 1be:	09 f0       	breq	.+2      	; 0x1c2 <main+0x10a>
 1c0:	a9 cf       	rjmp	.-174    	; 0x114 <main+0x5c>
 1c2:	a6 cf       	rjmp	.-180    	; 0x110 <main+0x58>

000001c4 <__divmodhi4>:
 1c4:	97 fb       	bst	r25, 7
 1c6:	07 2e       	mov	r0, r23
 1c8:	16 f4       	brtc	.+4      	; 0x1ce <__divmodhi4+0xa>
 1ca:	00 94       	com	r0
 1cc:	06 d0       	rcall	.+12     	; 0x1da <__divmodhi4_neg1>
 1ce:	77 fd       	sbrc	r23, 7
 1d0:	08 d0       	rcall	.+16     	; 0x1e2 <__divmodhi4_neg2>
 1d2:	0b d0       	rcall	.+22     	; 0x1ea <__udivmodhi4>
 1d4:	07 fc       	sbrc	r0, 7
 1d6:	05 d0       	rcall	.+10     	; 0x1e2 <__divmodhi4_neg2>
 1d8:	3e f4       	brtc	.+14     	; 0x1e8 <__divmodhi4_exit>

000001da <__divmodhi4_neg1>:
 1da:	90 95       	com	r25
 1dc:	81 95       	neg	r24
 1de:	9f 4f       	sbci	r25, 0xFF	; 255
 1e0:	08 95       	ret

000001e2 <__divmodhi4_neg2>:
 1e2:	70 95       	com	r23
 1e4:	61 95       	neg	r22
 1e6:	7f 4f       	sbci	r23, 0xFF	; 255

000001e8 <__divmodhi4_exit>:
 1e8:	08 95       	ret

000001ea <__udivmodhi4>:
 1ea:	aa 1b       	sub	r26, r26
 1ec:	bb 1b       	sub	r27, r27
 1ee:	51 e1       	ldi	r21, 0x11	; 17
 1f0:	07 c0       	rjmp	.+14     	; 0x200 <__udivmodhi4_ep>

000001f2 <__udivmodhi4_loop>:
 1f2:	aa 1f       	adc	r26, r26
 1f4:	bb 1f       	adc	r27, r27
 1f6:	a6 17       	cp	r26, r22
 1f8:	b7 07       	cpc	r27, r23
 1fa:	10 f0       	brcs	.+4      	; 0x200 <__udivmodhi4_ep>
 1fc:	a6 1b       	sub	r26, r22
 1fe:	b7 0b       	sbc	r27, r23

00000200 <__udivmodhi4_ep>:
 200:	88 1f       	adc	r24, r24
 202:	99 1f       	adc	r25, r25
 204:	5a 95       	dec	r21
 206:	a9 f7       	brne	.-22     	; 0x1f2 <__udivmodhi4_loop>
 208:	80 95       	com	r24
 20a:	90 95       	com	r25
 20c:	bc 01       	movw	r22, r24
 20e:	cd 01       	movw	r24, r26
 210:	08 95       	ret

00000212 <_exit>:
 212:	f8 94       	cli

00000214 <__stop_program>:
 214:	ff cf       	rjmp	.-2      	; 0x214 <__stop_program>
