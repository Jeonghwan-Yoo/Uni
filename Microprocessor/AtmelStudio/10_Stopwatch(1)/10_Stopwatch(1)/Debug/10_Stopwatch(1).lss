
10_Stopwatch(1).elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  000002d0  00000364  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002d0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  0080010a  0080010a  0000036e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000036e  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  0000039e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000002f0  00000000  00000000  000003ce  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000012c  00000000  00000000  000006be  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002ec  00000000  00000000  000007ea  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000074  00000000  00000000  00000ad8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001c5  00000000  00000000  00000b4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000009f  00000000  00000000  00000d11  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  00000db0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	59 c0       	rjmp	.+178    	; 0xc8 <__vector_5>
  16:	00 00       	nop
  18:	7f c0       	rjmp	.+254    	; 0x118 <__vector_6>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 ed       	ldi	r30, 0xD0	; 208
  a0:	f2 e0       	ldi	r31, 0x02	; 2
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	aa 30       	cpi	r26, 0x0A	; 10
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	aa e0       	ldi	r26, 0x0A	; 10
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a4 31       	cpi	r26, 0x14	; 20
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	50 d0       	rcall	.+160    	; 0x164 <main>
  c4:	03 c1       	rjmp	.+518    	; 0x2cc <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <__vector_5>:
unsigned char SEG[10]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90};
int stop=0;
int reset=0;
int num4,num3,num2,num1=0;
	
ISR(INT4_vect){
  c8:	1f 92       	push	r1
  ca:	0f 92       	push	r0
  cc:	0f b6       	in	r0, 0x3f	; 63
  ce:	0f 92       	push	r0
  d0:	11 24       	eor	r1, r1
  d2:	2f 93       	push	r18
  d4:	8f 93       	push	r24
  d6:	9f 93       	push	r25
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  d8:	26 e6       	ldi	r18, 0x66	; 102
  da:	86 ee       	ldi	r24, 0xE6	; 230
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	21 50       	subi	r18, 0x01	; 1
  e0:	80 40       	sbci	r24, 0x00	; 0
  e2:	90 40       	sbci	r25, 0x00	; 0
  e4:	e1 f7       	brne	.-8      	; 0xde <__vector_5+0x16>
	_delay_ms(20);
	
	if(stop==0) stop=1;
  e6:	80 91 0c 01 	lds	r24, 0x010C
  ea:	90 91 0d 01 	lds	r25, 0x010D
  ee:	89 2b       	or	r24, r25
  f0:	39 f4       	brne	.+14     	; 0x100 <__vector_5+0x38>
  f2:	81 e0       	ldi	r24, 0x01	; 1
  f4:	90 e0       	ldi	r25, 0x00	; 0
  f6:	90 93 0d 01 	sts	0x010D, r25
  fa:	80 93 0c 01 	sts	0x010C, r24
  fe:	04 c0       	rjmp	.+8      	; 0x108 <__vector_5+0x40>
	else stop=0;
 100:	10 92 0d 01 	sts	0x010D, r1
 104:	10 92 0c 01 	sts	0x010C, r1
	

}
 108:	9f 91       	pop	r25
 10a:	8f 91       	pop	r24
 10c:	2f 91       	pop	r18
 10e:	0f 90       	pop	r0
 110:	0f be       	out	0x3f, r0	; 63
 112:	0f 90       	pop	r0
 114:	1f 90       	pop	r1
 116:	18 95       	reti

00000118 <__vector_6>:
ISR(INT5_vect){
 118:	1f 92       	push	r1
 11a:	0f 92       	push	r0
 11c:	0f b6       	in	r0, 0x3f	; 63
 11e:	0f 92       	push	r0
 120:	11 24       	eor	r1, r1
 122:	8f 93       	push	r24
 124:	9f 93       	push	r25
 126:	8f ef       	ldi	r24, 0xFF	; 255
 128:	9f e8       	ldi	r25, 0x8F	; 143
 12a:	01 97       	sbiw	r24, 0x01	; 1
 12c:	f1 f7       	brne	.-4      	; 0x12a <__vector_6+0x12>
 12e:	00 c0       	rjmp	.+0      	; 0x130 <__vector_6+0x18>
 130:	00 00       	nop
	_delay_ms(10);
	num1=0;
 132:	10 92 0b 01 	sts	0x010B, r1
 136:	10 92 0a 01 	sts	0x010A, r1
	num2=0;
 13a:	10 92 13 01 	sts	0x0113, r1
 13e:	10 92 12 01 	sts	0x0112, r1
	num3=0;
 142:	10 92 0f 01 	sts	0x010F, r1
 146:	10 92 0e 01 	sts	0x010E, r1
	num4=0;
 14a:	10 92 11 01 	sts	0x0111, r1
 14e:	10 92 10 01 	sts	0x0110, r1
	PORTC=0xff;
 152:	8f ef       	ldi	r24, 0xFF	; 255
 154:	85 bb       	out	0x15, r24	; 21
}
 156:	9f 91       	pop	r25
 158:	8f 91       	pop	r24
 15a:	0f 90       	pop	r0
 15c:	0f be       	out	0x3f, r0	; 63
 15e:	0f 90       	pop	r0
 160:	1f 90       	pop	r1
 162:	18 95       	reti

00000164 <main>:

int main(void)
{
	DDRA=0xff;
 164:	8f ef       	ldi	r24, 0xFF	; 255
 166:	8a bb       	out	0x1a, r24	; 26
	DDRB=0xff;
 168:	87 bb       	out	0x17, r24	; 23
	DDRC=0x0f;
 16a:	9f e0       	ldi	r25, 0x0F	; 15
 16c:	94 bb       	out	0x14, r25	; 20
	DDRE=0xfc;
 16e:	9c ef       	ldi	r25, 0xFC	; 252
 170:	92 b9       	out	0x02, r25	; 2
	PORTB=0xf0;
 172:	90 ef       	ldi	r25, 0xF0	; 240
 174:	98 bb       	out	0x18, r25	; 24
	PORTC=0xff;
 176:	85 bb       	out	0x15, r24	; 21
	PORTA=SEG[0];
 178:	80 91 00 01 	lds	r24, 0x0100
 17c:	8b bb       	out	0x1b, r24	; 27
	PORTE=0xf0;
 17e:	93 b9       	out	0x03, r25	; 3
	EICRB=0b00001010;
 180:	8a e0       	ldi	r24, 0x0A	; 10
 182:	8a bf       	out	0x3a, r24	; 58
	EIMSK=0b00110000;
 184:	80 e3       	ldi	r24, 0x30	; 48
 186:	89 bf       	out	0x39, r24	; 57
	SREG=0x80;
 188:	80 e8       	ldi	r24, 0x80	; 128
 18a:	8f bf       	out	0x3f, r24	; 63

	while(1){
		PORTB=0xfe;
 18c:	7e ef       	ldi	r23, 0xFE	; 254
		while(!(~PINE&10));
		
		num1++;
		if(num1==10){
			num1=0;
			PORTC=0xff;
 18e:	6f ef       	ldi	r22, 0xFF	; 255
		}
		if(num2==10){
			num2=0;
			PORTC=0xff;
			num3++;
			PORTC=0xfc;
 190:	bc ef       	ldi	r27, 0xFC	; 252
		}
		if(num3==10){
			num3=0;
			PORTC=0xff;
			num4++;
			PORTC=0xf8;
 192:	a8 ef       	ldi	r26, 0xF8	; 248
	EICRB=0b00001010;
	EIMSK=0b00110000;
	SREG=0x80;

	while(1){
		PORTB=0xfe;
 194:	57 2f       	mov	r21, r23
		PORTA=SEG[num1];
		_delay_ms(2);
		PORTB=0xfd;
 196:	4d ef       	ldi	r20, 0xFD	; 253
		PORTA=SEG[num2];
		_delay_ms(2);
		PORTB=0xfb;
 198:	3b ef       	ldi	r19, 0xFB	; 251
		PORTA=SEG[num3];
		_delay_ms(3);
		PORTB=0xf7;
 19a:	27 ef       	ldi	r18, 0xF7	; 247
	EICRB=0b00001010;
	EIMSK=0b00110000;
	SREG=0x80;

	while(1){
		PORTB=0xfe;
 19c:	58 bb       	out	0x18, r21	; 24
		PORTA=SEG[num1];
 19e:	e0 91 0a 01 	lds	r30, 0x010A
 1a2:	f0 91 0b 01 	lds	r31, 0x010B
 1a6:	e0 50       	subi	r30, 0x00	; 0
 1a8:	ff 4f       	sbci	r31, 0xFF	; 255
 1aa:	80 81       	ld	r24, Z
 1ac:	8b bb       	out	0x1b, r24	; 27
 1ae:	8c ec       	ldi	r24, 0xCC	; 204
 1b0:	9c e1       	ldi	r25, 0x1C	; 28
 1b2:	01 97       	sbiw	r24, 0x01	; 1
 1b4:	f1 f7       	brne	.-4      	; 0x1b2 <main+0x4e>
 1b6:	00 c0       	rjmp	.+0      	; 0x1b8 <main+0x54>
 1b8:	00 00       	nop
		_delay_ms(2);
		PORTB=0xfd;
 1ba:	48 bb       	out	0x18, r20	; 24
		PORTA=SEG[num2];
 1bc:	e0 91 12 01 	lds	r30, 0x0112
 1c0:	f0 91 13 01 	lds	r31, 0x0113
 1c4:	e0 50       	subi	r30, 0x00	; 0
 1c6:	ff 4f       	sbci	r31, 0xFF	; 255
 1c8:	80 81       	ld	r24, Z
 1ca:	8b bb       	out	0x1b, r24	; 27
 1cc:	8c ec       	ldi	r24, 0xCC	; 204
 1ce:	9c e1       	ldi	r25, 0x1C	; 28
 1d0:	01 97       	sbiw	r24, 0x01	; 1
 1d2:	f1 f7       	brne	.-4      	; 0x1d0 <main+0x6c>
 1d4:	00 c0       	rjmp	.+0      	; 0x1d6 <main+0x72>
 1d6:	00 00       	nop
		_delay_ms(2);
		PORTB=0xfb;
 1d8:	38 bb       	out	0x18, r19	; 24
		PORTA=SEG[num3];
 1da:	e0 91 0e 01 	lds	r30, 0x010E
 1de:	f0 91 0f 01 	lds	r31, 0x010F
 1e2:	e0 50       	subi	r30, 0x00	; 0
 1e4:	ff 4f       	sbci	r31, 0xFF	; 255
 1e6:	80 81       	ld	r24, Z
 1e8:	8b bb       	out	0x1b, r24	; 27
 1ea:	83 e3       	ldi	r24, 0x33	; 51
 1ec:	9b e2       	ldi	r25, 0x2B	; 43
 1ee:	01 97       	sbiw	r24, 0x01	; 1
 1f0:	f1 f7       	brne	.-4      	; 0x1ee <main+0x8a>
		_delay_ms(3);
		PORTB=0xf7;
 1f2:	28 bb       	out	0x18, r18	; 24
		PORTA=SEG[num4];
 1f4:	e0 91 10 01 	lds	r30, 0x0110
 1f8:	f0 91 11 01 	lds	r31, 0x0111
 1fc:	e0 50       	subi	r30, 0x00	; 0
 1fe:	ff 4f       	sbci	r31, 0xFF	; 255
 200:	80 81       	ld	r24, Z
 202:	8b bb       	out	0x1b, r24	; 27
 204:	83 e3       	ldi	r24, 0x33	; 51
 206:	9b e2       	ldi	r25, 0x2B	; 43
 208:	01 97       	sbiw	r24, 0x01	; 1
 20a:	f1 f7       	brne	.-4      	; 0x208 <main+0xa4>
		_delay_ms(3);
		if(stop==1) continue;
 20c:	80 91 0c 01 	lds	r24, 0x010C
 210:	90 91 0d 01 	lds	r25, 0x010D
 214:	01 97       	sbiw	r24, 0x01	; 1
 216:	11 f2       	breq	.-124    	; 0x19c <main+0x38>
		while(!(~PINE&10));
 218:	81 b1       	in	r24, 0x01	; 1
 21a:	90 e0       	ldi	r25, 0x00	; 0
 21c:	80 95       	com	r24
 21e:	90 95       	com	r25
 220:	8a 70       	andi	r24, 0x0A	; 10
 222:	99 27       	eor	r25, r25
 224:	89 2b       	or	r24, r25
 226:	c1 f3       	breq	.-16     	; 0x218 <main+0xb4>
		
		num1++;
 228:	80 91 0a 01 	lds	r24, 0x010A
 22c:	90 91 0b 01 	lds	r25, 0x010B
 230:	01 96       	adiw	r24, 0x01	; 1
		if(num1==10){
 232:	8a 30       	cpi	r24, 0x0A	; 10
 234:	91 05       	cpc	r25, r1
 236:	29 f0       	breq	.+10     	; 0x242 <main+0xde>
		PORTA=SEG[num4];
		_delay_ms(3);
		if(stop==1) continue;
		while(!(~PINE&10));
		
		num1++;
 238:	90 93 0b 01 	sts	0x010B, r25
 23c:	80 93 0a 01 	sts	0x010A, r24
 240:	0f c0       	rjmp	.+30     	; 0x260 <main+0xfc>
		if(num1==10){
			num1=0;
 242:	10 92 0b 01 	sts	0x010B, r1
 246:	10 92 0a 01 	sts	0x010A, r1
			PORTC=0xff;
 24a:	65 bb       	out	0x15, r22	; 21
			num2++;
 24c:	80 91 12 01 	lds	r24, 0x0112
 250:	90 91 13 01 	lds	r25, 0x0113
 254:	01 96       	adiw	r24, 0x01	; 1
 256:	90 93 13 01 	sts	0x0113, r25
 25a:	80 93 12 01 	sts	0x0112, r24
			PORTC=0xfe;
 25e:	75 bb       	out	0x15, r23	; 21
		}
		if(num2==10){
 260:	80 91 12 01 	lds	r24, 0x0112
 264:	90 91 13 01 	lds	r25, 0x0113
 268:	0a 97       	sbiw	r24, 0x0a	; 10
 26a:	79 f4       	brne	.+30     	; 0x28a <main+0x126>
			num2=0;
 26c:	10 92 13 01 	sts	0x0113, r1
 270:	10 92 12 01 	sts	0x0112, r1
			PORTC=0xff;
 274:	65 bb       	out	0x15, r22	; 21
			num3++;
 276:	80 91 0e 01 	lds	r24, 0x010E
 27a:	90 91 0f 01 	lds	r25, 0x010F
 27e:	01 96       	adiw	r24, 0x01	; 1
 280:	90 93 0f 01 	sts	0x010F, r25
 284:	80 93 0e 01 	sts	0x010E, r24
			PORTC=0xfc;
 288:	b5 bb       	out	0x15, r27	; 21
		}
		if(num3==10){
 28a:	80 91 0e 01 	lds	r24, 0x010E
 28e:	90 91 0f 01 	lds	r25, 0x010F
 292:	0a 97       	sbiw	r24, 0x0a	; 10
 294:	79 f4       	brne	.+30     	; 0x2b4 <main+0x150>
			num3=0;
 296:	10 92 0f 01 	sts	0x010F, r1
 29a:	10 92 0e 01 	sts	0x010E, r1
			PORTC=0xff;
 29e:	65 bb       	out	0x15, r22	; 21
			num4++;
 2a0:	80 91 10 01 	lds	r24, 0x0110
 2a4:	90 91 11 01 	lds	r25, 0x0111
 2a8:	01 96       	adiw	r24, 0x01	; 1
 2aa:	90 93 11 01 	sts	0x0111, r25
 2ae:	80 93 10 01 	sts	0x0110, r24
			PORTC=0xf8;
 2b2:	a5 bb       	out	0x15, r26	; 21
		}
		if(num4==10){
 2b4:	80 91 10 01 	lds	r24, 0x0110
 2b8:	90 91 11 01 	lds	r25, 0x0111
 2bc:	0a 97       	sbiw	r24, 0x0a	; 10
 2be:	09 f0       	breq	.+2      	; 0x2c2 <main+0x15e>
 2c0:	6d cf       	rjmp	.-294    	; 0x19c <main+0x38>
			num4=0;
 2c2:	10 92 11 01 	sts	0x0111, r1
 2c6:	10 92 10 01 	sts	0x0110, r1
 2ca:	68 cf       	rjmp	.-304    	; 0x19c <main+0x38>

000002cc <_exit>:
 2cc:	f8 94       	cli

000002ce <__stop_program>:
 2ce:	ff cf       	rjmp	.-2      	; 0x2ce <__stop_program>
